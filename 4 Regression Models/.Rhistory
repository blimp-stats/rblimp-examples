seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel,'y')
library(rblimp)
library(mitml)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.9.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp_fcs(
data = data,
ordinal = 'd',
variables = 'a1:a3 y x d',
seed = 90291,
burn = 1000,
iter = 10000,
chains = 20,
nimps = 20
) |> by_group('group')
# view output
lapply(mymodel,output)
# mitml list
implist <- as.mitml(mymodel)
# inspect variable names
names(implist[[1]])
# pooled grand means
mean_x <- mean(unlist(lapply(implist, function(data) mean(data$x))))
mean_d <- mean(unlist(lapply(implist, function(data) mean(data$d))))
# analysis and pooling with mitml
results <- with(implist, lm(y ~ I(x - mean_x) + group + I(x - mean_x):group + I(d - mean_d)))
testEstimates(results, extra.pars = T, df.com = 295)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.10.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd1 d2',
fixed = 'd1 x2',
center = 'x1 x2',
model = 'y ~ x1 (x1^2) x2 d1 d2',
seed = 12345,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.11.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y d',
fixed = 'd',
center = 'x1 x2',
model = 'y ~ 1@b0 x1 x2 d@b3',
parameters = 'pp_d0 = phi(b0);
pp_d1 = phi(b0 + b3);
pp_diff = pp_d1 - pp_d0',
seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.11.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y d',
fixed = 'd',
center = 'x1 x2',
model = 'y ~ x1 x2 d',
seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.12.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y d',
fixed = 'd',
center = 'x1 x2',
model = 'y ~ x1 x2 d',
seed = 90291,
burn = 20000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.13.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y d',
fixed = 'd',
center = 'x1 x2',
model = 'logit(y) ~ x1 x2 d',
seed = 90291,
burn = 2000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.13.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y d',
fixed = 'd',
center = 'x1 x2',
model = 'logit(y) ~ 1@b0 x1 x2 d@b3',
parameters = 'pp_d0 = exp(b0) / (1 + exp(b0));
pp_d1 = exp(b0 + b3) / (1 + exp(b0 + b3));
pp_diff = pp_d1 - pp_d0',
seed = 90291,
burn = 2000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.14.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
nominal = 'y',
fixed = 'x2 x3',
center = 'x1 x2 x3',
model = 'logit(y) ~ x1 x2 x3',
seed = 90291,
burn = 2000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.15.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd1 d2',
count = 'y',
fixed = 'd1 x1',
center = 'x1 x2',
model = 'y ~ d1 d2 x1 x2',
seed = 90291,
burn = 5000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.17.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'x1:x7 d1 d2',
model = '
focal.model:
xscale = x1:+:x7;
y ~  xscale d1 d2;
predictor.model:
x1:x7 d1 d2 ~ 1',
seed = 90291,
burn = 5000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.17.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'x1:x7 d1 d2',
model = '
focal.model:
xscale = x1:+:x7;
y ~  xscale d1 d2;
predictor.model:
x1:x7 d1 d2 ~ 1',
seed = 90291,
burn = 5000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.17.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'x1:x7 d1 d2',
model = '
focal.model:
xscale = x1:+:x7;
y ~  xscale d1 d2;
predictor.model:
x1:x7 d1 d2 ~ 1',
seed = 90291,
burn = 5000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.17.RDS', 'rb')
data <- readRDS(connect); close(connect)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.17.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'x1:x7 d1 d2',
model = '
focal.model:
xscale = x1:+:x7;
yscale ~  xscale d1 d2;
predictor.model:
x1:x7 d1 d2 ~ 1',
seed = 90291,
burn = 5000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'yscale')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.17.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y1:y5 x1:x7 d1 d2',
model = '
focal.model:
xscale = x1:+:x7;
yscale ~  xscale d1 d2;
predictor.model:
x1:x7 d1 d2 ~ 1;
auxiliary.models:
y1:y5 ~ yscale',
seed = 90291,
burn = 20000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'yscale')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.18.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y1:y5 x1:x7 m',
model = '
focal.model:
xscale = x1:+:x7;
yscale ~ xscale m m*xscale;
predictor.model:
x1:x7 m ~ 1;
auxiliary.model:
y1:y5 ~ yscale',
seed = 90291,
burn = 20000,
iter = 10000)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.18.RDS', 'rb')
data <- readRDS(connect); close(connect)
names(data)[names(data) == "xscale"] <- "xs"
mymodel <- rblimp(
data = data,
ordinal = 'y1:y5 x1:x7 m',
model = '
focal.model:
xscale = x1:+:x7;
yscale ~ xscale m m*xscale;
predictor.model:
x1:x7 m ~ 1;
auxiliary.model:
y1:y5 ~ yscale',
seed = 90291,
burn = 20000,
iter = 10000)
saveRDS(data, file = "~/desktop/Ex4.18.RDS")
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.19.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'y d1 d2',
fixed = 'd1 x1',
model = '
focal.model:
logit(y) ~ x1 x2 d1 d2;
predictor.model:
yjt(x2 - 16) ~ x1 d1;
d2 ~ x2 x1 d1',
seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.20.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd',
fixed = 'x1',
center = 'x1 x2',
model = 'yjt(y - 9) ~ x1 x2 d',
seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
library(mitml)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.20.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd',
fixed = 'x1',
center = 'x1 x2',
model = 'yjt(y - 9) ~ x1 x2 d',
seed = 90291,
burn = 1000,
iter = 10000,
chains = 20,
nimps = 20)
output(mymodel)
# inspect variable names
names(mymodel@imputations[[1]])
# mitml list
implist <- as.mitml(mymodel)
# plot raw and transformed scores
dat2plot <- do.call(rbind, implist)
hist(dat2plot$y,breaks = 20)
hist(dat2plot$yjt.yjt.y.9..,breaks = 20)
# pooled grand means
mean_x1 <- mean(unlist(lapply(implist, function(data) mean(data$x1))))
mean_x2 <- mean(unlist(lapply(implist, function(data) mean(data$x2))))
# analyze skewed outcome
results <- with(implist, lm(y ~ I(x1 - mean_x1)  + I(x2 - mean_x2) + d))
testEstimates(results, extra.pars = T, df.com = 1996)
# analyze normalized outcome
results <- with(implist, lm(yjt.yjt.y.9.. ~ I(x1 - mean_x1)  + I(x2 - mean_x2) + d))
# inspect variable names
names(mymodel@imputations[[1]])
library(rblimp)
library(mitml)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.20.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd',
fixed = 'x1',
center = 'x1 x2',
model = 'yjt(y - 9) ~ x1 x2 d',
seed = 90291,
burn = 1000,
iter = 10000,
chains = 20,
nimps = 20)
output(mymodel)
# inspect variable names
names(mymodel@imputations[[1]])
# mitml list
implist <- as.mitml(mymodel)
# plot raw and transformed scores
dat2plot <- do.call(rbind, implist)
hist(dat2plot$y,breaks = 20)
hist(dat2plot$yjt.y.9..,breaks = 20)
# pooled grand means
mean_x1 <- mean(unlist(lapply(implist, function(data) mean(data$x1))))
mean_x2 <- mean(unlist(lapply(implist, function(data) mean(data$x2))))
# analyze skewed outcome
results <- with(implist, lm(y ~ I(x1 - mean_x1)  + I(x2 - mean_x2) + d))
testEstimates(results, extra.pars = T, df.com = 1996)
# analyze normalized outcome
results <- with(implist, lm(yjt.y.9.. ~ I(x1 - mean_x1)  + I(x2 - mean_x2) + d))
library(rblimp)
library(mitml)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.20.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd',
fixed = 'x1',
center = 'x1 x2',
model = 'yjt(y - 9) ~ x1 x2 d',
seed = 90291,
burn = 1000,
iter = 10000,
chains = 20,
nimps = 20)
output(mymodel)
# inspect variable names
names(mymodel@imputations[[1]])
# mitml list
implist <- as.mitml(mymodel)
# plot raw and transformed scores
dat2plot <- do.call(rbind, implist)
hist(dat2plot$y,breaks = 20)
hist(dat2plot$yjt.y.9.,breaks = 20)
# pooled grand means
mean_x1 <- mean(unlist(lapply(implist, function(data) mean(data$x1))))
mean_x2 <- mean(unlist(lapply(implist, function(data) mean(data$x2))))
# analyze skewed outcome
results <- with(implist, lm(y ~ I(x1 - mean_x1)  + I(x2 - mean_x2) + d))
testEstimates(results, extra.pars = T, df.com = 1996)
# analyze normalized outcome
results <- with(implist, lm(yjt.y.9. ~ I(x1 - mean_x1)  + I(x2 - mean_x2) + d))
testEstimates(results, extra.pars = T, df.com = 1996)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.21.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd',
fixed = 'x2 x3',
model = '
focal.model:
y ~ d;
propensity.model:
logit(d) ~ x1 x2 x3 x4 x1*x2 x1*x3 x1*x4 x2*x3 x2*x4 x3*x4',
seed = 90291,
burn = 2000,
iter = 10000,
chains = 20,
nimps = 20)
output(mymodel)
posterior_plot(mymodel)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.22.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
weights = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.22.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
weight = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.22.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
weights = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.22.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
weight = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.22.RDS', 'rb')
data <- readRDS(connect); close(connect)
View(data)
data[] <- lapply(data, function(col) {
if (is.list(col)) unlist(col) else col
})
mymodel <- rblimp(
data = data,
weight = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.22.RDS', 'rb')
data <- readRDS(connect); close(connect)
data[] <- lapply(data, function(col) {
if (is.list(col)) unlist(col) else col
})
mymodel <- rblimp(
data = data,
weight = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
sapply(data, is.list)
class(data)
data <- as.data.frame(data)
saveRDS(data, file = "~/desktop/Ex4.22.RDS")
mymodel <- rblimp(
data = data,
weight = 'wght',
model = 'y ~ x1 x2 x3',
seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
library(rblimp)
connect <- url('https://raw.githubusercontent.com/blimp-stats/rblimp-examples/main/Data/Ex4.23.RDS', 'rb')
data <- readRDS(connect); close(connect)
mymodel <- rblimp(
data = data,
ordinal = 'd',
fixed = 'd',
center = 'x1 x2',
model = 'y ~ x1@b1 x2@b2 d@b3',
waldtest = list('b1:b3 = 0', 'b1:b2 = 0', 'b1 = b2'),
seed = 90291,
burn = 1000,
iter = 10000)
output(mymodel)
posterior_plot(mymodel, 'y')
